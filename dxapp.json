{
  "name": "assoctool",
  "title": "Assoctool",
  "summary": "App for association analyses",
  "tags": [
    "Statistics"
  ],
  "dxapi": "1.0.0",
  "version": "0.0.1",
  "inputSpec": [
    {
      "name": "omics_file",
      "label": "Main data file",
      "help": "The main data file containing SNPs or transcripts or other omics dataset. For matrix type, the assumption is num markers x num obs. Must have header and row name. Will be stored as 'mdata'. Note: .rds / .rda / .RData will be loaded to memory in one swoop, which is a bad idea for a big analysis.",
      "class": "file",
      "patterns": ["*.txt", "*.csv", "*.Rda", "*.Rds", "*.RData", "*.rda", "*.rds", "*.gds", "*.bmat.tar"],
      "optional": false
    },
    {
      "name": "block_size",
      "label": "Block size",
      "help": "How many rows you wish to load at a time. The larger the number, the higher the burden of the computation. If the number is too small, it may be bogged down by the disk speed. Use your judgment. Leave default if in doubt. This is ignored if you set the 'Load all' to true or if the data is in .rds / .rda / .RData format.",
      "class": "int",
      "optional": true,
      "default": 10000
    },
    {
      "name": "pheno_file",
      "label": "Phenotype file",
      "help": "Num obs x num variables. Must have header. Will be stored as 'pdata'. Note: any column names with spaces or punctuations will be mangled as per R convention.",
      "class": "file",
      "patterns": ["*.txt", "*.csv"],
      "optional": false
    },
    {
      "name": "pheno_filter_criteria",
      "label": "Phenotype filter criteria",
      "help": "R-style expression. This is for prefiltering your phenotype (and thus your main data). Example: Supplement==0 & Cancer==0. In that example, your phenotype file MUST have Supplement and Cancer columns.",
      "class": "string",
      "optional": true
    },
    {
      "name": "output_file",
      "label": "Output file name",
      "class": "string",
      "optional": false
    },
    {
      "name": "save_as_binary",
      "label": "Save as binary",
      "help": "If true, assoctool will save the output as binary (R's .rds format). Use R's readRDS to read the rds format.",
      "class": "boolean",
      "optional": true,
      "default": false
    },
    {
      "name": "compress_output",
      "label": "Compress output file",
      "help": "Do you want to compress the output file? Not recommended if you select 'Save as binary' option because RDS format is already compressed.",
      "class": "string",
      "choices": ["NONE", "GZIP", "BZ2", "XZ"],
      "optional": true,
      "default": "NONE"
    },
    {
      "name": "id_col",
      "label": "ID column",
      "help": "Column name in phenotypic file indicating the ID. This column will be matched with the main data's row name.",
      "class": "string",
      "optional": false,
      "default": "ID"
    },
    {
      "name": "factors_list",
      "label": "Factor variables",
      "help": "Column names in phenotypic file that should be treated as factors instead of numeric. A comma separated list. This is useful when your batches are in numeric values.",
      "class": "string",
      "optional": true
    },
    {
      "name": "analysis_type",
      "label": "Analysis type",
      "help": "Analysis type.",
      "class": "string",
      "optional": false,
	  "choices": ["GWAS", "EPIGENOME", "TRANSCRIPTOME", "PROTEIN", "METABOLITE", "MICROBIOME", "GENERIC"],
      "default": "GWAS"
    },
    {
      "name": "method",
      "label": "Method",
      "help": "Method string. If you specify custom method, MAKE SURE you fill in analysis code.",
      "class": "string",
      "optional": false,
	  "choices": ["LM", "LMM", "GLM", "GLMM", "NLS", "NLMM", "PEDIGREEMM", "KINSHIP1", "KINSHIP2", "LOGISTF", "RLM", "POLR", "SURVIVAL", "COXME", "GEE", "GEEGLM", "ORDGEE", "ZEROINFL", "GLMNB", "CENSREG", "TRUNCREG", "BETAREG", "QUANTREG", "MLOGIT", "RELOGIT", "GAMLSS", "ZELIG", "CUSTOM"],
      "default": "LMM"
    },
    {
      "name": "formula",
      "label": "Formula",
      "help": "R-style formula for your association analysis. Note: Your omic data will be named 'y'. But you can override this below.",
      "class": "string",
      "optional": false
    },
    {
      "name": "omics_var_name",
      "label": "Omics variable name",
      "help": "The variable name with which your omics dataset will be named. Default is 'y'.",
      "class": "string",
      "optional": false,
      "default": "y"
    },
    {
      "name": "result_var_name",
      "label": "Result variable names",
      "help": "Comma-separated variable names to output into the result table. Your formula may contain multiple terms. By default, assoctool will output the P-value, Beta (Fx), SE, T, and occasionally R^2 (RSq) for all terms. You may limit the output to certain variables only (comma separated). Note that the search is string-based and thus not fool-proof. Also, if your variables of interest are categorical, sometimes they have an extra suffix. Example: sexM or vitcTertile1 or vitcTertile2. Simply mentioning sex or vitc would work, but it may also catch sexhormone, for example.",
      "class": "string",
      "optional": true
    },
    {
      "name": "fn_param_list",
      "label": "Function parameter list",
      "help": "Comma-separated parameter list that you pass to the main analysis function. Must be valid R expression. For example: You want a weighted regression in LMM (for which lme4's lmer will be called) and you store the weights in the phenotype file in column called 'WGTs'. In addition, you want an maximum likelihood fit rather than the default REML. So you would list 'weights=pdata[, \"WGTs\"],REML=FALSE'. Of course, in this example, you will need the column WGTs in your phenotype file.",
      "class": "string",
      "optional": true
    },
    {
      "name": "annot_file",
      "label": "Annotation file",
      "help": "Annotation file for filtering variants / markers. If not specified, then no filtering is done. If loaded from .rda / .rds / .RData, it must be in data.frame format.",
      "class": "file",
      "patterns": ["*.txt", "*.csv", "*.Rda", "*.Rds", "*.RData", "*.rda", "*.rds"],
      "optional": true
    },
    {
      "name": "annot_marker_id",
      "label": "Annotation Marker ID",
      "help": "The column name in the annotation file that indicates marker ID. You must fill this if you fill in annotation file.",
      "class": "string",
      "optional": true
    },
    {
      "name": "annot_filter_criteria",
      "label": "Annotation filter criteria",
      "help": "R-style expression. Example: Impute_RSq>=0.3 & Chr==\"19\". In that example, your annotation file MUST have Impute_RSq and Chr columns. You must fill this if you fill in annotation file. Note that it is not advisable to filter MAF/MAC based on annotation file. See MAF / MAC threshold options below.",
      "class": "string",
      "optional": true
    },
    {
      "name": "annot_cols",
      "label": "Annotation columns",
      "help": "Comma-separated annotation column list indicating which columns (in that order) you want to annotate your results with. Leave blank if you do not want to annotate your results.",
      "class": "string",
      "optional": true
    },
    {
      "name": "maf_threshold",
      "label": "MAF Threshold",
      "help": "Anything below this Minor Allele Frequency threshold will be eliminated. Note: The MAF will computed on the fly (using data for which there are phenotypes). Also, you MUST supply the chromosome name.",
      "class": "float",
      "optional": true
    },
    {
      "name": "mac_threshold",
      "label": "MAC Threshold",
      "help": "Anything below this Minor Allele Count threshold will be eliminated. Note: The MAC will computed on the fly (using data for which there are phenotypes). Also, you MUST supply the chromosome name. If both MAF and MAC threshold are filled, then only SNPs that fulfill both criteria will be analyzed.",
      "class": "int",
      "default": 1,
      "optional": true
    },
    {
      "name": "chromosome",
      "label": "Chromosome",
      "help": "Chromosome name. Only applicable for GWAS analyses. Enter X, Y, or MT for X, Y, or mitochondrial chromosome. Anything else will be treated as autosome.",
      "class": "string",
      "default": "autosome",
      "optional": true
    },
    {
      "name": "sex",
      "label": "Column name for Sex",
      "help": "Column name in phenotype file that indicates sex. Only applicable for GWAS analyses; ignored for other analysis types. MUST be encoded as M or F to indicate males and females, respectively (again, only for GWAS case). This is only used to compute MAF / MAC.",
      "class": "string",
      "default": "sex",
      "optional": true
    },
    {
      "name": "gds_var_id",
      "label": "GDS Variant ID attribute",
      "help": "The name of variant ID field in GDS file. Defaults to variant.id. Only applicable for GDS format.",
      "class": "string",
      "default": "variant.id",
      "optional": true
    },
    {
      "name": "gds_sample_id",
      "label": "GDS Sample ID attribute",
      "help": "The name of sample ID field in GDS file. Defaults to sample.id. Only applicable for GDS format.",
      "class": "string",
      "default": "sample.id",
      "optional": true
    },
    {
      "name": "pedigree_file",
      "label": "Pedigree file",
      "help": "Pedigree file for pedigree-based analysis. Will be stored as 'ped'. If you put in a .txt or .csv, the assumption is the pedigree is to be constructed (either through kinship or pedigreemm). In that case, you MUST fill in the pedigree ID, father and mother IDs. For .rds, .rda, or .RData formats, the assumption will always be a matrix (sparse/dense). Note: assoctool will NOT filter the pedigree matrix (not for now at least).",
      "class": "file",
      "patterns": ["*.txt", "*.csv", ".rds", ".rda", ".RData"],
      "optional": true
    },
    {
      "name": "pedigree_type",
      "label": "Pedigree type",
      "help": "Pedigree type. For sparse / dense matrix-based pedigree, you MUST use rds / rda / RData format.",
      "class": "string",
      "optional": true,
	  "choices": ["KINSHIP1", "KINSHIP2", "PEDIGREEMM", "SPARSE_MATRIX", "DENSE_MATRIX"],
      "default": "PEDIGREEMM"
    },
    {
      "name": "pedigree_id_col",
      "label": "Pedigree ID column",
      "help": "Column name in phenotypic file indicating the ID for matching the IDs in the pedigree file. This is useful when you have multiple ID sets (as a typical big project would have)---the main data uses one set of IDs, while the pedigree is specified under another set of IDs. By default, this is the same as the main ID (i.e., id_col).",
      "class": "string",
      "optional": true,
      "default": "ID"
    },
    {
      "name": "pedigree_id",
      "label": "IDs in the pedigree",
      "help": "The column name in the pedigree file that indicates individual ID. The IDs in pedigree file will be matched with the IDs in the phenotype file. The ID column in pedigree file can be named differently than that in the phenotype file. You must fill this if you fill in pedigree file.",
      "class": "string",
      "optional": true,
      "default": "ID"
    },
    {
      "name": "pedigree_father",
      "label": "Father IDs in the pedigree",
      "help": "The column name in the pedigree file that indicates father's IDs. You must fill this if you fill in pedigree file.",
      "class": "string",
      "optional": true,
      "default": "father"
    },
    {
      "name": "pedigree_mother",
      "label": "Mother IDs in the pedigree",
      "help": "The column name in the pedigree file that indicates mother's IDs. You must fill this if you fill in pedigree file.",
      "class": "string",
      "optional": true,
      "default": "mother"
    },
    {
      "name": "pedigree_sex",
      "label": "Sex in the pedigree",
      "help": "The column indicating sex in the pedigree file. Needed only in kinship.",
      "class": "string",
      "optional": true,
      "default": "sex"
    },
    {
      "name": "analysis_code",
      "label": "Analysis code file",
      "help": "R source code for custom analysis. Make sure you define function doOne(i). This function does the analysis of one association.",
      "class": "file",
      "patterns": ["*.R", "*.r"],
      "optional": true
    },
    {
      "name": "preload_code",
      "label": "Preload code file",
      "help": "R source code for preloading. This code will be loaded right BEFORE the data (main, phenotype, pedigree, annotation) are loaded and prepared. If you need to load several needed libraries or if you have specialized loading routines, here is the place. You can set opt$skip_loading_XXX to TRUE if you have a custom loader.",
      "class": "file",
      "patterns": ["*.R", "*.r"],
      "optional": true
    },
    {
      "name": "prologue_code",
      "label": "Prologue code file",
      "help": "R source code for custom preprocessing. This code will be loaded right after all the data (main, phenotype, pedigree, annotation) are loaded and prepared.",
      "class": "file",
      "patterns": ["*.R", "*.r"],
      "optional": true
    },
    {
      "name": "epilogue_code",
      "label": "Epilogue code file",
      "help": "R source code for custom postprocessing. This code will be loaded right before the output is saved.",
      "class": "file",
      "patterns": ["*.R", "*.r"],
      "optional": true
    },
    {
      "name": "tx_fun",
      "label": "Transform function",
      "help": "R function to indicate custom transformation done on the main table. Example: For a crude Inverse Normal Transform (INT), you put in: 'function(x) qqnorm(as.numeric(x), plot.it=FALSE)$x' or for Z-transform: 'function(x) scale(as.numeric(x), center=TRUE, scale=TRUE)'",
      "class": "string",
      "optional": true
    },
    {
      "name": "num_cores",
      "help": "The number of cores (at least one) you wish to use for the analysis. If you leave it blank or fill it with invalid values, the program will try to use the maximum number available.",
      "class": "int",
      "optional": true
    },
    {
      "name": "load_all",
	  "label": "Load all",
      "help": "Setting this true will force the program to load the entirety of the data into the memory (RAM). This is generally a bad idea if you have a big dataset. Only do it if you have a small dataset and you do not want to be bothered with loading the data file in blocks.",
      "class": "boolean",
      "optional": true,
      "default": false
    },
    {
      "name": "debug",
	  "label": "Debug output",
	  "help": "Show debug information in command line mode",
      "class": "boolean",
      "optional": true,
      "default": false
    }
  ],
  "outputSpec": [
    {
      "name": "results",
      "class": "file"
    }
  ],
  "runSpec": {
    "timeoutPolicy": {
      "*": {
        "days": 30
      }
    },
    "systemRequirements": {
      "main": {
        "instanceType": "mem1_ssd1_x32"
      }
    },
    "file": "src/assoctool.sh",
    "release": "14.04",
    "interpreter": "bash",
    "distribution": "Ubuntu"
  },
  "access": {
    "network": [
      "*"
    ]
  },
  "authorizedUsers" : [
    "PUBLIC"
  ]
}
